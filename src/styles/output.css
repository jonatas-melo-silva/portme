/*! tailwindcss v4.1.10 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: var(--font-sans);
    --font-serif: var(--font-serif);
    --font-mono: var(--font-mono);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-4xl: 2rem;
    --shadow-2xs: var(--shadow-2xs);
    --shadow-xs: var(--shadow-xs);
    --shadow-sm: var(--shadow-sm);
    --shadow-md: var(--shadow-md);
    --shadow-lg: var(--shadow-lg);
    --shadow-xl: var(--shadow-xl);
    --shadow-2xl: var(--shadow-2xl);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --shadow: var(--shadow);
    --font-preahvihear: var(--font-preahvihear);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container\/banner {
    container-type: inline-size;
    container-name: banner;
  }
  .\@container\/banner-content {
    container-type: inline-size;
    container-name: banner-content;
  }
  .\@container\/banner-text {
    container-type: inline-size;
    container-name: banner-text;
  }
  .\@container\/header {
    container-type: inline-size;
    container-name: header;
  }
  .\@container\/image {
    container-type: inline-size;
    container-name: image;
  }
  .\@container\/navigation {
    container-type: inline-size;
    container-name: navigation;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .size-50 {
    width: calc(var(--spacing) * 50);
    height: calc(var(--spacing) * 50);
  }
  .h-fit {
    height: fit-content;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .border-8 {
    border-style: var(--tw-border-style);
    border-width: 8px;
  }
  .border-border {
    border-color: var(--border);
  }
  .object-cover {
    object-fit: cover;
  }
  .object-center {
    object-position: center;
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .text-center {
    text-align: center;
  }
  .font-preahvihear {
    font-family: var(--font-preahvihear);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-foreground {
    color: var(--foreground);
  }
  .text-primary {
    color: var(--primary);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--primary);
      }
    }
  }
  .sm\:size-\[264px\] {
    @media (width >= 40rem) {
      width: 264px;
      height: 264px;
    }
  }
  .sm\:w-fit {
    @media (width >= 40rem) {
      width: fit-content;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:items-end {
    @media (width >= 40rem) {
      align-items: flex-end;
    }
  }
  .sm\:justify-start {
    @media (width >= 40rem) {
      justify-content: flex-start;
    }
  }
  .sm\:py-36 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 36);
    }
  }
  .sm\:text-end {
    @media (width >= 40rem) {
      text-align: end;
    }
  }
  .sm\:text-2xl {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:size-100 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 100);
      height: calc(var(--spacing) * 100);
    }
  }
  .lg\:w-2\/4 {
    @media (width >= 64rem) {
      width: calc(2/4 * 100%);
    }
  }
}
:root {
  --background: oklch(0.9730 0.0133 286.1503);
  --foreground: oklch(0.2864 0.0785 280.2318);
  --card: oklch(1.0000 0 0);
  --card-foreground: oklch(0.2864 0.0785 280.2318);
  --popover: oklch(1.0000 0 0);
  --popover-foreground: oklch(0.2864 0.0785 280.2318);
  --primary: oklch(0.5137 0.2376 283.0929);
  --primary-foreground: oklch(1.0000 0 0);
  --secondary: oklch(0.9174 0.0435 292.6901);
  --secondary-foreground: oklch(0.3916 0.1427 284.7922);
  --muted: oklch(0.9532 0.0187 286.0394);
  --muted-foreground: oklch(0.5272 0.0657 283.9213);
  --accent: oklch(0.9221 0.0373 262.1410);
  --accent-foreground: oklch(0.2864 0.0785 280.2318);
  --destructive: oklch(0.6861 0.2061 14.9941);
  --destructive-foreground: oklch(1.0000 0 0);
  --border: oklch(0.9042 0.0299 285.7872);
  --input: oklch(0.9042 0.0299 285.7872);
  --ring: oklch(0.5137 0.2376 283.0929);
  --chart-1: oklch(0.5137 0.2376 283.0929);
  --chart-2: oklch(0.6990 0.1685 288.6576);
  --chart-3: oklch(0.5464 0.2522 273.7324);
  --chart-4: oklch(0.6275 0.2057 281.1907);
  --chart-5: oklch(0.4272 0.2319 273.2320);
  --sidebar: oklch(0.9532 0.0187 286.0394);
  --sidebar-foreground: oklch(0.2864 0.0785 280.2318);
  --sidebar-primary: oklch(0.5137 0.2376 283.0929);
  --sidebar-primary-foreground: oklch(1.0000 0 0);
  --sidebar-accent: oklch(0.9221 0.0373 262.1410);
  --sidebar-accent-foreground: oklch(0.2864 0.0785 280.2318);
  --sidebar-border: oklch(0.9042 0.0299 285.7872);
  --sidebar-ring: oklch(0.5137 0.2376 283.0929);
  --font-preahvihear: Preahvihear, sans-serif;
  --font-sans: Inter, sans-serif;
  --font-serif: Lora, serif;
  --font-mono: Fira Code, monospace;
  --radius: 0.5rem;
  --shadow-2xs: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.06);
  --shadow-xs: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.06);
  --shadow-sm: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 1px 2px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 1px 2px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-md: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 2px 4px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-lg: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 4px 6px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-xl: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 8px 10px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-2xl: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.30);
}
.dark {
  --background: oklch(0.1844 0.0383 281.9748);
  --foreground: oklch(0.9089 0.0367 285.6477);
  --card: oklch(0.2173 0.0538 280.9468);
  --card-foreground: oklch(0.9089 0.0367 285.6477);
  --popover: oklch(0.2173 0.0538 280.9468);
  --popover-foreground: oklch(0.9089 0.0367 285.6477);
  --primary: oklch(0.7162 0.1597 290.3962);
  --primary-foreground: oklch(0.1844 0.0383 281.9748);
  --secondary: oklch(0.2959 0.1005 279.8426);
  --secondary-foreground: oklch(0.8367 0.0849 285.9111);
  --muted: oklch(0.2547 0.0867 278.2918);
  --muted-foreground: oklch(0.7019 0.0640 284.6311);
  --accent: oklch(0.3143 0.1156 277.4334);
  --accent-foreground: oklch(0.9089 0.0367 285.6477);
  --destructive: oklch(0.6861 0.2061 14.9941);
  --destructive-foreground: oklch(1.0000 0 0);
  --border: oklch(0.3088 0.0841 280.2819);
  --input: oklch(0.3088 0.0841 280.2819);
  --ring: oklch(0.7162 0.1597 290.3962);
  --chart-1: oklch(0.7162 0.1597 290.3962);
  --chart-2: oklch(0.6138 0.1461 273.3596);
  --chart-3: oklch(0.7512 0.1369 245.3085);
  --chart-4: oklch(0.7637 0.1217 185.4995);
  --chart-5: oklch(0.7546 0.1831 346.8124);
  --sidebar: oklch(0.2173 0.0538 280.9468);
  --sidebar-foreground: oklch(0.9089 0.0367 285.6477);
  --sidebar-primary: oklch(0.7162 0.1597 290.3962);
  --sidebar-primary-foreground: oklch(0.1844 0.0383 281.9748);
  --sidebar-accent: oklch(0.3143 0.1156 277.4334);
  --sidebar-accent-foreground: oklch(0.9089 0.0367 285.6477);
  --sidebar-border: oklch(0.3088 0.0841 280.2819);
  --sidebar-ring: oklch(0.7162 0.1597 290.3962);
  --font-preahvihear: Preahvihear, sans-serif;
  --font-sans: Inter, sans-serif;
  --font-serif: Lora, serif;
  --font-mono: Fira Code, monospace;
  --radius: 0.5rem;
  --shadow-2xs: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.06);
  --shadow-xs: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.06);
  --shadow-sm: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 1px 2px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 1px 2px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-md: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 2px 4px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-lg: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 4px 6px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-xl: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 8px 10px -1px hsl(240 42.1875% 25.0980% / 0.12);
  --shadow-2xl: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.30);
}
@media (prefers-color-scheme: dark) {
  :root {
    --background: oklch(0.1844 0.0383 281.9748);
    --foreground: oklch(0.9089 0.0367 285.6477);
    --card: oklch(0.2173 0.0538 280.9468);
    --card-foreground: oklch(0.9089 0.0367 285.6477);
    --popover: oklch(0.2173 0.0538 280.9468);
    --popover-foreground: oklch(0.9089 0.0367 285.6477);
    --primary: oklch(0.7162 0.1597 290.3962);
    --primary-foreground: oklch(0.1844 0.0383 281.9748);
    --secondary: oklch(0.2959 0.1005 279.8426);
    --secondary-foreground: oklch(0.8367 0.0849 285.9111);
    --muted: oklch(0.2547 0.0867 278.2918);
    --muted-foreground: oklch(0.7019 0.0640 284.6311);
    --accent: oklch(0.3143 0.1156 277.4334);
    --accent-foreground: oklch(0.9089 0.0367 285.6477);
    --destructive: oklch(0.6861 0.2061 14.9941);
    --destructive-foreground: oklch(1.0000 0 0);
    --border: oklch(0.3088 0.0841 280.2819);
    --input: oklch(0.3088 0.0841 280.2819);
    --ring: oklch(0.7162 0.1597 290.3962);
    --chart-1: oklch(0.7162 0.1597 290.3962);
    --chart-2: oklch(0.6138 0.1461 273.3596);
    --chart-3: oklch(0.7512 0.1369 245.3085);
    --chart-4: oklch(0.7637 0.1217 185.4995);
    --chart-5: oklch(0.7546 0.1831 346.8124);
    --sidebar: oklch(0.2173 0.0538 280.9468);
    --sidebar-foreground: oklch(0.9089 0.0367 285.6477);
    --sidebar-primary: oklch(0.7162 0.1597 290.3962);
    --sidebar-primary-foreground: oklch(0.1844 0.0383 281.9748);
    --sidebar-accent: oklch(0.3143 0.1156 277.4334);
    --sidebar-accent-foreground: oklch(0.9089 0.0367 285.6477);
    --sidebar-border: oklch(0.3088 0.0841 280.2819);
    --sidebar-ring: oklch(0.7162 0.1597 290.3962);
    --font-preahvihear: Preahvihear, sans-serif;
    --font-sans: Inter, sans-serif;
    --font-serif: Lora, serif;
    --font-mono: Fira Code, monospace;
    --radius: 0.5rem;
    --shadow-2xs: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.06);
    --shadow-xs: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.06);
    --shadow-sm: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 1px 2px -1px hsl(240 42.1875% 25.0980% / 0.12);
    --shadow: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 1px 2px -1px hsl(240 42.1875% 25.0980% / 0.12);
    --shadow-md: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 2px 4px -1px hsl(240 42.1875% 25.0980% / 0.12);
    --shadow-lg: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 4px 6px -1px hsl(240 42.1875% 25.0980% / 0.12);
    --shadow-xl: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.12), 0px 8px 10px -1px hsl(240 42.1875% 25.0980% / 0.12);
    --shadow-2xl: 0px 4px 10px 0px hsl(240 42.1875% 25.0980% / 0.30);
  }
}
@layer components {
  body {
    min-height: 100lvh;
    max-width: 100lvw;
    background-color: var(--background);
    color: var(--foreground);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .btn {
    display: inline-flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 2);
    border-radius: calc(var(--radius) - 2px);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    white-space: nowrap;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-outline-style: none;
    outline-style: none;
    &:focus-visible {
      border-color: var(--ring);
    }
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
    @media (prefers-color-scheme: dark) {
      &[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
    & svg {
      pointer-events: none;
    }
    & svg {
      flex-shrink: 0;
    }
    & svg:not([class*='size-']) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .btn--default {
    background-color: var(--primary);
    color: var(--primary-foreground);
    --tw-shadow: var(--shadow-xs);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  }
  .btn--secondary {
    background-color: var(--secondary);
    color: var(--secondary-foreground);
    --tw-shadow: var(--shadow-xs);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  }
  .btn--destructive {
    background-color: var(--destructive);
    color: var(--color-white);
    --tw-shadow: var(--shadow-xs);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
    &:focus-visible {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
    @media (prefers-color-scheme: dark) {
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
    @media (prefers-color-scheme: dark) {
      &:focus-visible {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .btn--outline {
    border-style: var(--tw-border-style);
    border-width: 1px;
    background-color: var(--background);
    --tw-shadow: var(--shadow-xs);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    @media (prefers-color-scheme: dark) {
      border-color: var(--input);
    }
    @media (prefers-color-scheme: dark) {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--input);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--input) 50%, transparent);
          }
        }
      }
    }
  }
  .btn--ghost {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--accent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--accent) 50%, transparent);
          }
        }
      }
    }
  }
  .btn--link {
    color: var(--primary);
    text-underline-offset: 4px;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .btn--default {
    height: calc(var(--spacing) * 9);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    &:has(>svg) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .btn--sm {
    height: calc(var(--spacing) * 8);
    gap: calc(var(--spacing) * 1.5);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 3);
    &:has(>svg) {
      padding-inline: calc(var(--spacing) * 2.5);
    }
  }
  .btn--lg {
    height: calc(var(--spacing) * 10);
    border-radius: calc(var(--radius) - 2px);
    padding-inline: calc(var(--spacing) * 6);
    &:has(>svg) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .btn--icon {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }
  .avatar {
    position: relative;
    display: flex;
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
    flex-shrink: 0;
    overflow: hidden;
    border-radius: calc(infinity * 1px);
  }
  .avatar--image {
    position: absolute;
    aspect-ratio: 1 / 1;
    width: 100%;
    height: 100%;
  }
  .avatar--fallback {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    background-color: var(--muted);
  }
  .separator {
    flex-shrink: 0;
    background-color: var(--foreground);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--foreground) 10%, transparent);
    }
  }
  .separator--horizontal {
    height: 1px;
    width: 100%;
    min-width: 100%;
  }
  .separator--vertical {
    height: 100%;
    min-height: 100%;
    width: 1px;
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
